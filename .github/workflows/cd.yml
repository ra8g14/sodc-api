name: CD

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  docker-build-prod:
    name: Docker build production (Docker ${{ matrix.docker }})
    runs-on: ubuntu-latest
    container:
      image: jdipper/docker_test_env:latest
      env:
        DOCKER_CERT_PATH: /certs/client
        DOCKER_CLI_EXPERIMENTAL: enabled
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_VERIFY: '1'
      options: >-
        -v /tmp/docker/certs/client:/certs/client
    services:
      docker:
        image: docker:${{ matrix.docker }}-dind
        env:
          DOCKER_TLS_CERTDIR: /certs
        options: >-
          --privileged
          -v /home/runner/work:/__w
          -v /tmp/docker/certs:/certs
          --health-cmd "docker info"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        docker:
          - '19.03'
      fail-fast: false
    timeout-minutes: 30
    env:
      ADMIN_IMAGE: ${{ secrets.DH_USERNAME }}/api-admin:test
      CLIENT_IMAGE: ${{ secrets.DH_USERNAME }}/api-client
      NGINX_IMAGE: ${{ secrets.DH_USERNAME }}/api-nginx
      PHP_IMAGE: ${{ secrets.DH_USERNAME }}/api-php
      REACT_APP_API_ENTRYPOINT: ${{ secrets.API_ENTRY_POINT }}
      VARNISH_IMAGE: ${{ secrets.DH_USERNAME }}/api-varnish
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Get tag version
          id: get_tag
          run: echo ::set-output name=VERSION::sed -i -e 's/${GITHUB_REF/refs\/tags\//}//g'
        - name: Print version
          run: echo ${{ steps.get_tag.outputs.VERSION }}

